#!/usr/bin/env groovy

properties([
    buildDiscarder(logRotator(daysToKeepStr: "365", numToKeepStr: "5000", artifactDaysToKeepStr: "365", artifactNumToKeepStr: "5000")),
    disableConcurrentBuilds(),
])

pipeline {
    environment {
        sumaform_runner_url = 'https://gitlab.suse.de/galaxy/sumaform-test-runner'
        sumaform_url = 'https://github.com/moio/sumaform.git'
        ssh_flags = '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
        server_node = 'cloud-pts-server.mgr.suse.de'
    }
    agent {
        label 'performance-tests'
    }
    triggers {
        cron('H(0-29) 0,3,6,9,12,15,18,21 * * *')
        cron('H(30-59) 1,4,7,10,13,16,19,22 * * *')
    }
    stages {
        stage('Deploy VMs on ECP') {
            steps {
                dir('prod/performance/runner') {
                    git url: sumaform_runner_url
                }
                dir('prod/performance/sumaform') {
                    git url: sumaform_url
                }
                sh "mv prod/performance/runner/performance/* prod/performance/sumaform"

                dir('prod/performance/sumaform') {
                    ansiColor('xterm') {
                        sh 'terraform init'
                        timeout(time: 6, unit:'HOURS') {
                          sh 'terraform apply'
                        }
                    }
                }
            }
        }

        stage('Wait until evil-minions are onboarded') {
          steps {
            sh "ssh $ssh_flags -tt root@$server_node run-pts --onboarding-only"
          }
        }

        stage('Benchmark disk I/O performance') {
          steps {
            sh "ssh $ssh_flags -tt root@$server_node run-pts --fio-only"
          }
        }

        stage('Patch all evil minions') {
            steps {
                sh "ssh $ssh_flags -tt root@$server_node run-pts --patching-only"
            }
        }

        stage('Locust stress tests') {
            steps {
                sh "ssh $ssh_flags -tt root@$server_node run-pts --locust-only"
            }
        }
    }
    post {
        always {
            dir('prod/performance/sumaform') {
                ansiColor('xterm') {
                    sh 'terraform destroy -force'
                }
            }
            dir("${env.WORKSPACE}") {
                deleteDir()
            }
        }
    }
}
