#!/usr/bin/env groovy

properties([
    buildDiscarder(logRotator(numToKeepStr: '500', daysToKeepStr: '4')),
    disableConcurrentBuilds(),
])

pipeline {
  environment {
      sumaform_runner_url = 'https://gitlab.suse.de/galaxy/sumaform-test-runner'
      sumaform_url = 'https://github.com/moio/sumaform.git'
      locust_tf = 'locust.tf'
      ssh_flags = '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
      locust_node = 'locust.cloud.suse.de'
      exec_locust = 'run-locust'
    }
  agent { label 'performance-tests' }
  stages {
        stage('Deploy Locust on cloud') {
          steps {
  
            dir('prod') { git url: sumaform_runner_url }
            dir('prod/performance/sumaform') { git url: sumaform_url }
            sh "mv prod/performance/$locust_tf prod/performance/sumaform"
                    
            dir('prod/performance/sumaform') {
               sh 'terraform init'
               sh 'terraform apply'
            }
  
          }
      }
        stage('execute Locust tests 200user 100hatchrate 120sec') {
          steps {
            sh "ssh $ssh_flags -tt root@$locust_node $exec_locust"
           }
        }

        stage('execute Locust tests 300user 200hatchrate 120sec') {
          steps {
            sh "ssh $ssh_flags -tt root@$locust_node $exec_locust -c 300 -r 200"
           }
       }

       stage('execute Locust tests 400user 250hatchrate 120sec') {
          steps {
            sh "ssh $ssh_flags -tt root@$locust_node $exec_locust -c 400 -r 250"
           }
       }
 }
  post { 
    always { 
      dir('prod/performance/sumaform') {
        sh 'terraform destroy -force'
      }
      cleanWs()
     }
  }
}
