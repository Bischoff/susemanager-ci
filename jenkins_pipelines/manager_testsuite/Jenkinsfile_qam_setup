#!/usr/bin/env groovy

// Configure the build properties
properties([
    buildDiscarder(logRotator(numToKeepStr: '20', daysToKeepStr: '4')),
    disableConcurrentBuilds(),
])

def deployed = false

pipeline {

    parameters {
        // Note: We need to define this variable manually in our Jenkins configuration (to select the version we want to test)
        // string(defaultValue: 'Manager-4.0', name: 'testsuite_branch')
        // string(defaultValue: 'master', description: 'Sumaform branch or commit', name: 'sumaform_branch')
        text(name: 'mu_repositories', defaultValue: '{"server":"http://download.suse.de/ibs/SUSE:/Maintenance:/12947/SUSE_Updates_SLE-Module-SUSE-Manager-Server_4.0_x86_64/","proxy":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12947/SUSE_Updates_SLE-Module-SUSE-Manager-Server_4.0_x86_64/"},"sle11sp4_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12934/SUSE_Updates_SLE-SERVER_11-SP4-CLIENT-TOOLS_x86_64/"},"sle11sp4_client":{"traditional":"http://download.suse.de/ibs/SUSE:/Maintenance:/12934/SUSE_Updates_SLE-SERVER_11-SP3-CLIENT-TOOLS_x86_64/"},"sle12sp4_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12956/SUSE_Updates_SLE-Manager-Tools_12_x86_64/"},"sle12sp4_client":{"traditional":"http://download.suse.de/ibs/SUSE:/Maintenance:/12966/SUSE_Updates_SLE-Manager-Tools_12_x86_64/"},"sle15_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12957/SUSE_Updates_SLE-Module-Basesystem_15_x86_64/"},"sle15_client":{"traditional":"http://download.suse.de/ibs/SUSE:/Maintenance:/12967/SUSE_Updates_SLE-Manager-Tools_15-SP1_x86_64/"},"sle15sp1_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12958/SUSE_Updates_SLE-Module-Basesystem_15-SP1_x86_64/"},"sle15sp1_client":{"traditional":"http://download.suse.de/ibs/SUSE:/Maintenance:/12967/SUSE_Updates_SLE-Manager-Tools_15_x86_64/"},"ubuntu1804_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12961/SUSE_Updates_Ubuntu_18.04-CLIENT-TOOLS_x86_64/"},"ceos7_minion":{"salt":"http://download.suse.de/ibs/SUSE:/Maintenance:/12954/SUSE_Updates_RES_7-CLIENT-TOOLS_x86_64/"},"ceos7_client":{"traditional":" http://download.suse.de/ibs/SUSE:/Maintenance:/12933/SUSE_Updates_RES_7-CLIENT-TOOLS_x86_64/"}}', description: 'Salt & Traditional MU Repositories for each client, in json format')
        booleanParam(name: 'MUST_DEPLOY', defaultValue: true, description: 'Deploy')
        booleanParam(name: 'MUST_RUN_CORE', defaultValue: true, description: 'Run Core features')
        booleanParam(name: 'MUST_SYNC', defaultValue: true, description: 'Sync. products and channels')
    }

    environment {
      repository = 'SUSE/spacewalk'
      deployed = false
    }

    options { timestamps () }

    agent { label 'sumaform-cucumber' }

    stages {
        
        stage('CheckOut') {
            steps {
                checkout scm
                git branch: 'master', url: 'https://gitlab.suse.de/galaxy/sumaform-test-runner.git'
            }
        }
        
        stage('Deploy') {
            when {
                expression { params.MUST_DEPLOY == true }
            }
            steps {
                script {
                    if (params.sumaform_branch != null){
                      sh "SUMAFORM_BRANCH=${params.sumaform_branch} MU_REPOS='${params.mu_repositories}' bash jenkins-deploy.sh ${params.sumaform_env} ${params.testsuite_branch}"
                    } else {
                      sh "MU_REPOS='${params.mu_repositories}' bash jenkins-deploy.sh ${params.sumaform_env} ${params.testsuite_branch}"
                    }
                    sh "RAKE_NAMESPACE=utils RAKE_TASK=generate_features . ${env.WORKSPACE}/jenkins-utils.sh && . ${params.sumaform_env} && run_rake_task"
                    deployed = true
                }
            }
        }

        stage('Run Core features') {
            when {
                expression { params.MUST_RUN_CORE == true }
            }
            steps {
                sh "RAKE_NAMESPACE=cucumber RAKE_TASK=qam_core bash jenkins-test-runner.sh ${params.sumaform_env}"
            }
        }

        stage('Sync. products and channels') {
            when {
                expression { params.MUST_SYNC == true }
            }
            steps {
                sh "RAKE_NAMESPACE=cucumber RAKE_TASK=qam_reposync bash jenkins-test-runner.sh ${params.sumaform_env}"
            }
        }
    }
        
    post {
        always{
            script {
                if (deployed == true){
                    sh "RAKE_NAMESPACE=cucumber RAKE_TASK=qam_finishing bash jenkins-test-runner.sh ${params.sumaform_env} ||:"
                    sh "RAKE_NAMESPACE=utils RAKE_TASK=generate_test_report bash jenkins-test-runner.sh ${params.sumaform_env} ||:"
                    sh "bash jenkins-export-artifacts.sh ${params.sumaform_env} ${params.testsuite_branch}"
                    publishHTML( target: [
                                allowMissing: true,
                                alwaysLinkToLastBuild: false,
                                keepAll: true,
                                reportDir: "results/build-${env.BUILD_NUMBER}/cucumber_report/",
                                reportFiles: 'cucumber_report.html',
                                reportName: "TestSuite Report"]
                    )
                    junit allowEmptyResults: true, testResults: "results/build-${env.BUILD_NUMBER}/results_junit/*.xml"
                }
            }
        }
        success{
            script {
                if (params.cleanWorkspace == true) {
                    echo 'Clean up current workspace, when job success.'
                    cleanWs()
                }
            }
        }
    }
}
