#!/usr/bin/env groovy

// Configure the build properties
properties([
    buildDiscarder(logRotator(numToKeepStr: '500', daysToKeepStr: '4')),
    disableConcurrentBuilds(),
])

pipeline {

  // env variables
  environment { 
    // specific psql conf
    repository = "SUSE/spacewalk"
    context = "schema_mig_test_pgsql" 
    description = "schema migration test" 
    filter = "schema/spacewalk"
    git_fs = "${env.WORKSPACE}"      
    test = "susemanager-utils/testing/automation/schema-migration-test-pgsql.sh" \
    // trigger tests
    check = "gitarro.ruby2.1  -r ${repository}" + 
            " -c ${context} -d ${description} " +
            " -f ${filter} " +
            " -t ${test} " +
            " -g ${git_fs} " +
            "--check --changed_since 3600" 
    // postgresql
    runtest_pg = "gitarro.ruby2.1  -r ${repository}" + 
                 " -c ${context} -d ${description} " +
                 " -f ${filter} " +
                 " -g ${git_fs} " +
                 " -u \"${env.BUILD_URL}\"" +
                 " -t ${test} " 
    // oracle test
    runtest_oracle = "gitarro.ruby2.1  -r ${repository}" + 
                 " -c schema_mig_test_oracle -d \"python backend pgsql unit test\" " +
                 " -t \"susemanager-utils/testing/automation/schema-migration-test-oracle.sh\" " +
                 " -u \"${env.BUILD_URL}\" " +
                 " -f \"schema/spacewalk/\" " +
                 " -g \"${env.WORKSPACE}/oracle\" " 
    
  }

  // run only on specific hosts
  agent { label 'suse-manager-unit-tests' }
  // trigger
  triggers { cron('H/5 * * * *') }
  stages {
    stage('Check Pull Request') {
      steps {
        echo 'Check if a PR need a test'
        sh "${check} | grep \"TESTREQUIRED=true\" "
        }
      }
    stage('run parallel schema tests') {
      // This jobs run in parallel if 1st is OK
      parallel { 
        stage('Run schema tests postgresql') {
          steps {
            echo 'Run tests'
            sh "$runtest_pg"
            }
          }
  
        stage('Run tests oracle') {
          steps {
            echo 'Run schema tests oracle '
            sh "$runtest_oracle"
            }
          }
  
        }
    }
  }
  post { 
        always { 
            cleanWs()
        }
    }
}
